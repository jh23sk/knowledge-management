{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMultiselect = _resolveComponent(\"VueMultiselect\");\n  return _openBlock(), _createBlock(_component_VueMultiselect, {\n    modelValue: $data.subcategoryId,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.subcategoryId = $event),\n    options: $options.subcategoryOptions()\n  }, null, 8, [\"modelValue\", \"options\"]);\n}","map":{"version":3,"names":["_createBlock","_component_VueMultiselect","modelValue","$data","subcategoryId","_cache","$event","options","$options","subcategoryOptions"],"sources":["/Applications/Eclipse_2024-09.app/Contents/workspace/knowledgeManagement/vue/src/components/SelectSubcategory.vue"],"sourcesContent":["<template>\n\t<!-- <select v-model=\"subcategoryId\" class=\"form-select\"> \n\t\t<option value=\"\" selected>末選択</option>\n\t\t<option value=\"new\" v-if=\"addAble\">新規追加</option>  \n\t\t<option v-for=\"subcategory in createSubCategories()\"\n\t\t\t:key=\"subcategory.id\" :value=\"subcategory.id\"\n\t\t\t:selected=\"subcategory.id == subcategoryId\"\n\t\t>\n\t\t\t{{ getSubcategoryName(subcategory.id) }}\n\t\t</option>\n\t</select> -->\n\t<VueMultiselect\n\t\tv-model=\"subcategoryId\"\n\t\t:options=subcategoryOptions()\n\t>\n\t</VueMultiselect>\n</template>\n\n<script>\nimport * as Utils from '../assets/function/utils.js';\n\nexport default {\n\tname: 'cmp-select-category',\n\tprops: {\n\t\tsubcategories: [],\n\t\tmodels: [\n\t\t\t{\n\t\t\t\tcatgoryId: String,\n\t\t\t\tsubcategoryId: String,\n\t\t\t}\n\t\t],\n\t\taddAble: Boolean,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tsubcategoryId: \"\",\n\t\t}\n\t},\n\tmethods: {\n\t\t/* 中カテゴリのIDに対応する名称を返す */\n\t\t/* getSubcategoryName(subcategoryId) {\n\t\t\treturn Utils.getMasterName(this.subcategories, subcategoryId);\n\t\t}, */\n\t\t/* 選択した大カテゴリから、中カテゴリを絞り込んで返却  */\n\t\tcreateSubCategories() {\n\t\t\treturn Utils.createSubCategories(this.subcategories, this.models.categoryId);\n\t\t},\n\t\tsubcategoryOptions() {\n\t\t\tconst subcategoryOptions = this.createSubCategories().map((c) => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: c.name,\n\t\t\t\t\tvalue: c.id,\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn subcategoryOptions;\n\t\t},\n\t},\n\t/* created() {\n\t\tthis.subcategoryId = this.models.subcategoryId;\n\t}, */\n\twatch: {\n\t\tsubcategoryId(newValue) {\n\t\t\tthis.$emit('update:subcategoryId', newValue);\n\t\t},\n\t},\n}\n</script>\n\n<!-- <style scoped> -->\n<style>\n</style>\n"],"mappings":";;;uBAWCA,YAAA,CAIiBC,yBAAA;IAflBC,UAAA,EAYWC,KAAA,CAAAC,aAAa;IAZxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYWH,KAAA,CAAAC,aAAa,GAAAE,MAAA;IACrBC,OAAO,EAACC,QAAA,CAAAC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}