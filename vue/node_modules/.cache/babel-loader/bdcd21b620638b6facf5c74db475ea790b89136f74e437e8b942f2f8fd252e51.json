{"ast":null,"code":"import $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as Utils from '../assets/function/utils.js';\n//import SelectCategory from './SelectCategory.vue';\n//import SelectSubcategory from './SelectSubcategory.vue';\n\nexport default {\n  name: 'cmp-footer',\n  components: {\n    //SelectCategory,\n    //SelectSubcategory,\n  },\n  props: {\n    headers: [{\n      key: String,\n      title: String,\n      align: String,\n      sortable: String,\n      width: String\n    }],\n    endpoint: String\n  },\n  data() {\n    return {\n      search: \"\",\n      toggle: \"viewMode\",\n      selected: [],\n      // 削除チェックを入れた行\n      editingCategories: [],\n      editingSubcategories: [],\n      editingknowledges: [],\n      knowledgesSaved: [],\n      // DB保存済のナレッジ\n      addedMst: [],\n      editable: false,\n      updateFlg: false\n    };\n  },\n  methods: {\n    /* 【親から呼び出し】検索したカテゴリーリストを当コンポーネントに反映 */\n    setCategory(categories, subcategories) {\n      this.editingCategories = categories;\n      this.editingSubcategories = subcategories;\n    },\n    /* 【親から呼び出し】検索したナレッジリストを当コンポーネントに反映 */\n    setKnowledge(knowledges) {\n      this.editingknowledges = knowledges;\n      this.knowledgesSaved = knowledges;\n    },\n    /* listをlabel, value形式の配列に変換 */\n    convToOptions(list, addAble) {\n      const convToOptions = list.map(c => {\n        return {\n          label: c.name,\n          value: c.id\n        };\n      });\n      // 先頭に「新規追加」を追加\n      if (addAble) {\n        convToOptions.unshift({\n          label: \"新規追加\",\n          value: \"new\"\n        });\n      }\n      // 先頭に「未選択」を追加\n      convToOptions.unshift({\n        label: \"未選択\",\n        value: \"\"\n      });\n      return convToOptions;\n    },\n    /* 選択したカテゴリーから、サブカテゴリーを絞り込んで返却  */\n    createSubCategories(categoryId) {\n      return Utils.createSubCategories(this.editingSubcategories, categoryId);\n    },\n    /* カテゴリーのIDに対応する名称を返す */\n    getCategoryName(categoryId) {\n      return Utils.getMasterName(this.editingCategories, categoryId);\n    },\n    /* サブカテゴリーのIDに対応する名称を返す */\n    getSubcategoryName(subcategoryId) {\n      return Utils.getMasterName(this.editingSubcategories, subcategoryId);\n    },\n    /* カテゴリーリスト更新 【戻り値】エラーなし：false、エラーあり：true */\n    updateMst() {\n      // カテゴリーが新規追加されたか\n      const IsAddedNewCategory = this.addedMst.categoryId == \"new\";\n      const IsAddedNewSubcategory = this.addedMst.subcategoryId == \"new\";\n      // 既存カテゴリーの名称が変更されたか\n      const IsChangedCategoryName = !IsAddedNewCategory && this.getCategoryName(this.addedMst.categoryId) != this.addedMst.categoryName;\n      const IsChangedSubcategoryName = !IsAddedNewSubcategory && this.getSubcategoryName(this.addedMst.subcategoryId) != this.addedMst.subcategoryName;\n\n      /* エラーチェック */\n      // カテゴリー・サブカテゴリーともに変更なしの場合エラー\n      if (!IsAddedNewCategory && !IsChangedCategoryName && !IsAddedNewSubcategory && !IsChangedSubcategoryName) {\n        alert(\"このカテゴリーは追加済です。\");\n        return true;\n      }\n      // 未選択以外のカテゴリーを選択しているのに、名称が未入力の場合エラー\n      if (this.addedMst.categoryId && !this.addedMst.categoryName || this.addedMst.subcategoryId && !this.addedMst.subcategoryName) {\n        alert(\"名称を入力してください。\");\n        return true;\n      }\n\n      /* カテゴリーリストに反映 */\n      // カテゴリーを追加した場合はリストに反映\n      if (IsAddedNewCategory) {\n        this.addedMst.categoryId = uuidv4();\n        this.editingCategories.unshift({\n          id: this.addedMst.categoryId,\n          name: this.addedMst.categoryName\n        });\n      }\n      // サブカテゴリーを追加した場合はリストに反映\n      if (IsAddedNewSubcategory) {\n        this.addedMst.subcategoryId = uuidv4();\n        this.editingSubcategories.unshift({\n          id: this.addedMst.subcategoryId,\n          name: this.addedMst.subcategoryName,\n          categoryId: this.addedMst.categoryId\n        });\n      }\n      // 既存のカテゴリーの名称を変更した場合はリストに反映\n      if (IsChangedCategoryName) {\n        const targetId = this.addedMst.categoryId;\n        const newName = this.addedMst.categoryName;\n        $.each(this.editingCategories, function (index, val) {\n          if (val.id == targetId) {\n            val.name = newName;\n            return;\n          }\n        });\n      }\n      // 既存のサブカテゴリーの名称を変更した場合はリストに反映\n      if (IsChangedSubcategoryName) {\n        const targetId = this.addedMst.subcategoryId;\n        const newName = this.addedMst.subcategoryName;\n        $.each(this.editingSubcategories, function (index, val) {\n          if (val.id == targetId) {\n            val.name = newName;\n            return;\n          }\n        });\n      }\n      alert(\"カテゴリーリストに反映しました。保存ボタンで保存してください。\");\n      this.addedMst = [];\n      return false;\n    },\n    /* カテゴリーの「削除」押下時処理 */\n    /* 【引数】type：1(カテゴリー)または2(サブカテゴリー)、id：選択したID */\n    /* 【戻り値】true(エラーあり)またはfalse(エラーなし) */\n    deleteCategoryItem(type, id) {\n      const typeName = type == 1 ? \"カテゴリー\" : \"サブカテゴリー\";\n      if (confirm(\"この\" + typeName + \"を削除しますか？\")) {\n        /* エラーチェック */\n        // 配下のサブカテゴリーが存在しないこと\n        if (type == 1) {\n          if (this.createSubCategories(id).length > 0) {\n            alert(\"配下のサブカテゴリーが存在するため削除できません。\");\n            return true;\n          }\n        }\n\n        // 保存済のナレッジで使用していないこと\n        const fil1 = this.knowledgesSaved.filter(knowledge => {\n          return (type == 1 ? knowledge.categoryId : knowledge.subcategoryId) == id;\n        });\n        // 保存前のナレッジで使用していないこと\n        const fil2 = this.editingknowledges.filter(knowledge => {\n          return (type == 1 ? knowledge.categoryId : knowledge.subcategoryId) == id;\n        });\n        if (fil1.length > 0 || fil2.length > 0) {\n          alert(\"ナレッジに設定中のため削除できません。\");\n          return true;\n        }\n\n        /* 対象のカテゴリーをリストから削除 */\n        if (type == 1) {\n          this.editingCategories = this.editingCategories.filter(editingCategory => {\n            return editingCategory.id != id;\n          });\n        } else {\n          this.editingSubcategories = this.editingSubcategories.filter(editingSubcategory => {\n            return editingSubcategory.id != id;\n          });\n        }\n\n        // 初期化\n        if (type == 1) {\n          this.addedMst = [];\n        } else {\n          this.addedMst.subcategoryId = \"\";\n          this.addedMst.subcategoryName = \"\";\n        }\n        alert(typeName + \"を削除しました。保存ボタンで保存してください。\");\n        return false;\n      }\n    },\n    /* 「行追加」押下時処理 */\n    addRow() {\n      this.editingknowledges.unshift({\n        id: uuidv4(),\n        categoryId: \"\",\n        subcategoryId: \"\",\n        title: \"\",\n        content: \"\"\n      });\n    },\n    /* ナレッジの配列から、選択した行を除外して返却 */\n    removeSelectedKnowledges() {\n      this.selected.forEach(checkedRow => {\n        this.editingknowledges = this.editingknowledges.filter(knowledge => {\n          return knowledge.id != checkedRow;\n        });\n      });\n      this.selected = [];\n      return this.editingknowledges;\n    },\n    /* 「行削除」押下時処理 */\n    deleteRow() {\n      if (this.selected.length == 0) {\n        alert(\"削除したい行を選択してください。\");\n      } else {\n        if (confirm(\"選択した行を削除してよろしいですか？\")) {\n          this.editingknowledges = this.removeSelectedKnowledges();\n          alert(\"選択した行を削除しました。保存ボタンで保存してください。\");\n        }\n      }\n    },\n    /* 「保存」押下時処理 */\n    async save() {\n      this.$emit(\"call-parent-save\", this.editingCategories, this.editingSubcategories, this.editingknowledges, this.selected.length > 0);\n    }\n  },\n  watch: {\n    // 編集したらロード、検索ボタン押下前とかに「保存しますか？」ダイアログを出したい\n    // 初期表示でカテゴリーはupdate検知してしまう（親から当コンポーネントの関数呼んで反映させてるため）検索したときは検知する\n    // ナレッジは入力したり行追加しても検知されない\n    /* editingCategories() {\n    \tconsole.log(\"カテゴリー変更\");\n    \tthis.updateFlg = true;\n    },\n    editingSubcategories() {\n    \tconsole.log(\"サブカテゴリー変更\");\n    \tthis.updateFlg = true;\n    },\n    editingknowledges() {\n    \tconsole.log(\"ナレッジ変更\");\n    \tthis.updateFlg = true;\n    }, */\n  },\n  created() {\n    console.log(\"knowledgetableのcreated\");\n  },\n  mounted() {\n    console.log(\"mountedが呼ばれました\");\n  },\n  computed: {}\n};","map":{"version":3,"names":["$","v4","uuidv4","Utils","name","components","props","headers","key","String","title","align","sortable","width","endpoint","data","search","toggle","selected","editingCategories","editingSubcategories","editingknowledges","knowledgesSaved","addedMst","editable","updateFlg","methods","setCategory","categories","subcategories","setKnowledge","knowledges","convToOptions","list","addAble","map","c","label","value","id","unshift","createSubCategories","categoryId","getCategoryName","getMasterName","getSubcategoryName","subcategoryId","updateMst","IsAddedNewCategory","IsAddedNewSubcategory","IsChangedCategoryName","categoryName","IsChangedSubcategoryName","subcategoryName","alert","targetId","newName","each","index","val","deleteCategoryItem","type","typeName","confirm","length","fil1","filter","knowledge","fil2","editingCategory","editingSubcategory","addRow","content","removeSelectedKnowledges","forEach","checkedRow","deleteRow","save","$emit","watch","created","console","log","mounted","computed"],"sources":["/Applications/Eclipse_2024-09.app/Contents/workspace/knowledgeManagement/vue/src/components/KnowledgeTable.vue"],"sourcesContent":["<template>\n\t<v-container>\n\t\t<div v-if=\"endpoint == 'personal'\" class=\"mb-2 d-flex justify-content-end\">\n\t\t\t<span>\n\t\t\t\t<span v-if=\"editable\">\n\t\t\t\t\t<!-- カテゴリー追加ボタン＆ダイアログ -->\n\t\t\t\t\t<v-dialog max-width=\"500\">\n\t\t\t\t\t\t<template v-slot:activator=\"{ props: activatorProps }\">\n\t\t\t\t\t\t\t<v-btn\n\t\t\t\t\t\t\t\tv-bind=\"activatorProps\"\n\t\t\t\t\t\t\t\tcolor=\"surface-variant\"\n\t\t\t\t\t\t\t\ttext=\"カテゴリー操作\"\n\t\t\t\t\t\t\t\tvariant=\"flat\"\n\t\t\t\t\t\t\t\tclass=\"mr-1\"\n\t\t\t\t\t\t\t></v-btn>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<template v-slot:default=\"{ isActive }\">\n\t\t\t\t\t\t\t<v-card title=\"カテゴリー操作\">\n\t\t\t\t\t\t\t\t<v-card-text>\n\t\t\t\t\t\t\t\t\t<p>カテゴリーの新規追加・削除・名称変更を行います。</p>\n\t\t\t\t\t\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"form-label m-1\">カテゴリー</label>\n\t\t\t\t\t\t\t\t\t\t<!-- <SelectCategory\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"addedMst.categoryId\"\n\t\t\t\t\t\t\t\t\t\t\t:categories=\"editingCategories\"\n\t\t\t\t\t\t\t\t\t\t\t:addAble=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t:models=\"addedMst\"\n\t\t\t\t\t\t\t\t\t\t\t@change=\"addedMst.subcategoryId = ''; addedMst.subcategoryName = '';\n\t\t\t\t\t\t\t\t\t\t\t\taddedMst.categoryName = getCategoryName(addedMst.categoryId);\"\n\t\t\t\t\t\t\t\t\t\t/> -->\n\t\t\t\t\t\t\t\t\t\t<VueMultiselect\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"addedMst.categoryId\"\n\t\t\t\t\t\t\t\t\t\t\t:options=\"convToOptions(editingCategories, true)\"\n\t\t\t\t\t\t\t\t\t\t\t@select=\"addedMst.subcategoryId = ''; addedMst.subcategoryName = '';\n\t\t\t\t\t\t\t\t\t\t\taddedMst.categoryName = getCategoryName(addedMst.categoryId);\"\n\t\t\t\t\t\t\t\t\t\t\t@clear=\"addedMst.subcategoryId = ''; addedMst.subcategoryName = '';\n\t\t\t\t\t\t\t\t\t\t\taddedMst.categoryId = ''; ddedMst.categoryName = '';\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t</VueMultiselect>\n\t\t\t\t\t\t\t\t\t\t<div v-if=\"addedMst.categoryId\" class=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t<input v-model=\"addedMst.categoryName\" class=\"form-control\" placeholder=\"名称を入力してください\" />\n\t\t\t\t\t\t\t\t\t\t\t<!-- <v-btn text=\"削除\" v-if=\"addedMst.categoryId != 'new'\" @click=\"deleteCategory()\" variant=\"outlined\" color=\"purple\"></v-btn> -->\n\t\t\t\t\t\t\t\t\t\t\t<v-btn text=\"削除\" v-if=\"addedMst.categoryId != 'new'\" @click=\"deleteCategoryItem(1, addedMst.categoryId)\" variant=\"outlined\" color=\"purple\"></v-btn>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label class=\"form-label m-1\">サブカテゴリー</label>\n\t\t\t\t\t\t\t\t\t\t<!-- <SelectSubcategory \n\t\t\t\t\t\t\t\t\t\t\tv-model=\"addedMst.subcategoryId\" \n\t\t\t\t\t\t\t\t\t\t\t:subcategories=\"editingSubcategories\"\n\t\t\t\t\t\t\t\t\t\t\t:addAble=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t:models=\"addedMst\"\n\t\t\t\t\t\t\t\t\t\t\t@change=\"addedMst.subcategoryName = getSubcategoryName(addedMst.subcategoryId)\"\n\t\t\t\t\t\t\t\t\t\t/> -->\n\t\t\t\t\t\t\t\t\t\t<VueMultiselect\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"addedMst.subcategoryId\"\n\t\t\t\t\t\t\t\t\t\t\t:options=\"convToOptions(createSubCategories(addedMst.categoryId), addedMst.categoryId ? true : false)\"\n\t\t\t\t\t\t\t\t\t\t\t@select=\"addedMst.subcategoryName = getSubcategoryName(addedMst.subcategoryId);\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t</VueMultiselect>\n\t\t\t\t\t\t\t\t\t\t<div v-if=\"addedMst.subcategoryId\" class=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t<input v-model=\"addedMst.subcategoryName\" class=\"form-control\" placeholder=\"名称を入力してください\" />\n\t\t\t\t\t\t\t\t\t\t\t<!-- <v-btn text=\"削除\" v-if=\"addedMst.subcategoryId != 'new'\" @click=\"deleteSubcategory()\" variant=\"outlined\" color=\"purple\"></v-btn> -->\n\t\t\t\t\t\t\t\t\t\t\t<v-btn text=\"削除\" v-if=\"addedMst.subcategoryId != 'new'\" @click=\"deleteCategoryItem(2, addedMst.subcategoryId)\" variant=\"outlined\" color=\"purple\"></v-btn>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</v-card-text>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<v-card-actions>\n\t\t\t\t\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t\t\t\t\t<v-btn text=\"キャンセル\" @click=\"isActive.value = false\" variant=\"outlined\"></v-btn>\n\t\t\t\t\t\t\t\t\t<v-btn text=\"カテゴリーリストに反映\" @click=\"isActive.value = updateMst();\" :disabled=\"!addedMst.categoryId\" variant=\"outlined\" color=\"purple\"></v-btn> \n\t\t\t\t\t\t\t\t</v-card-actions>\n\t\t\t\t\t\t\t</v-card>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</v-dialog>\n\t\t\t\t\n\t\t\t\t\t<v-btn color=\"primary\" @click=\"addRow()\" class=\"mr-1\">\n\t\t\t\t\t\t<FontAwesomeIcon icon=\"fa-solid fa-circle-plus\" class=\"mr-1\"/>行追加\n\t\t\t\t\t</v-btn>\n\t\t\t\t\t<v-btn color=\"primary\" @click=\"deleteRow()\" class=\"mr-1\">\n\t\t\t\t\t\t<FontAwesomeIcon icon=\"fa-solid fa-circle-minus\" class=\"mr-1\"/>行削除\n\t\t\t\t\t</v-btn>\n\t\t\t\t\t<v-btn color=\"primary\" @click=\"save()\" class=\"mr-1\">\n\t\t\t\t\t\t<FontAwesomeIcon icon=\"fa-solid fa-floppy-disk\" class=\"mr-1\"/>保存\n\t\t\t\t\t</v-btn>\n\t\t\t\t</span>\n\t\t\t\t<v-btn-toggle v-model=\"toggle\" color=\"primary\" rounded=\"xl\" mandatory>\n\t\t\t\t\t<v-btn value=\"editMode\" @click=\"editable = true;\">\n\t\t\t\t\t\t<FontAwesomeIcon icon=\"fa-solid fa-pen-to-square\" class=\"mr-1\"/>編集モード\n\t\t\t\t\t</v-btn>\n\t\t\t\t\t<v-btn value=\"viewMode\" @click=\"editable = false;\">\n\t\t\t\t\t\t<FontAwesomeIcon icon=\"fa-solid fa-book-open\" class=\"mr-1\"/>閲覧モード\n\t\t\t\t\t</v-btn>\n\t\t\t\t</v-btn-toggle>\n\t\t\t</span>\n\t\t</div>\n\t\t\n\t\t<v-card flat>\n\t\t\t<!-- https://zenn.dev/bbled/books/vuetify3_book/viewer/sec2_20_datatable -->\n\t\t\t<v-data-table\n\t\t\t\t:headers=\"headers\"\n\t\t\t\t:items=\"editingknowledges\"\n\t\t\t\t:search=\"search\"\n\t\t\t\t:density=\"compact\"\n\t\t\t\t:items-per-page=\"100\"\n\t\t\t\t:items-per-page-options=\"pages\"\n\t\t\t\titems-per-page-text=\"表示行数\"\n\t\t\t\tno-data-text=\"データがありません。\"\n\t\t\t\tv-model=\"selected\"\n\t\t\t\titem-value=\"id\"\n\t\t\t\t:show-select=\"editable\"\n\t\t\t>\n\n\t\t\t\t<!-- tbody -->\n\t\t\t\t<!-- ID ※非表示。チェックボックスを1つずつ選択可にするために、ユニークな値でレンダリングさせる必要がある -->\n\t\t\t\t<template v-slot:[`item.id`]=\"{ item }\">\n\t\t\t\t\t<span hidden>{{ item.id }}</span>\n\t\t\t\t</template>\n\t\t\t\t\n\t\t\t\t<!-- カテゴリー -->\n\t\t\t\t<template v-slot:[`item.categoryId`]=\"{ item }\">\n\t\t\t\t\t<span v-if=\"editable\">\n\t\t\t\t\t\t<!-- <SelectCategory\n\t\t\t\t\t\t\tv-model=\"item.categoryId\"\n\t\t\t\t\t\t\t:categories=\"editingCategories\"\n\t\t\t\t\t\t\t:addAble=\"false\"\n\t\t\t\t\t\t\t:models=\"item\"\n\t\t\t\t\t\t\t@change=\"item.subcategoryId = '';\"\n\t\t\t\t\t\t/> -->\n\t\t\t\t\t\t<VueMultiselect\n\t\t\t\t\t\t\tv-model=\"item.categoryId\"\n\t\t\t\t\t\t\t:options=\"convToOptions(editingCategories, false)\"\n\t\t\t\t\t\t\t@select=\"item.subcategoryId = '';\"\n\t\t\t\t\t\t\t@clear=\"item.subcategoryId = ''; item.categoryId = '';\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</VueMultiselect>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span v-else>{{ getCategoryName(item.categoryId) }}</span>\n\t\t\t\t</template>\n\t\t\t\t\n\t\t\t\t<!-- サブカテゴリー -->\n\t\t\t\t<template v-slot:[`item.subcategoryId`]=\"{ item }\">\n\t\t\t\t\t<span v-if=\"editable\">\n\t\t\t\t\t\t<!-- <SelectSubcategory \n\t\t\t\t\t\t\tv-model=\"item.subcategoryId\" \n\t\t\t\t\t\t\t:subcategories=\"editingSubcategories\"\n\t\t\t\t\t\t\t:addAble=\"false\"\n\t\t\t\t\t\t\t:models=\"item\"\n\t\t\t\t\t\t/> -->\n\t\t\t\t\t\t<VueMultiselect\n\t\t\t\t\t\t\tv-model=\"item.subcategoryId\"\n\t\t\t\t\t\t\t:options=\"convToOptions(createSubCategories(item.categoryId), false)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</VueMultiselect>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span v-else>{{ getSubcategoryName(item.subcategoryId) }}</span>\n\t\t\t\t</template>\n\t\t\t\t\n\t\t\t\t<!-- タイトル -->\n\t\t\t\t<template v-slot:[`item.title`]=\"{ item }\">\n\t\t\t\t\t<textarea v-if=\"editable\" v-model=\"item.title\" class=\"form-control\" style=\"border-width:1px; resize:vertical;\"/>\n\t\t\t\t\t<textarea v-else v-model=\"item.title\" class=\"form-control p-0\" style=\"border-width:0px; resize:none;\" readonly/>\n\t\t\t\t</template>\n\t\t\t\t\n\t\t\t\t<!-- 内容 -->\n\t\t\t\t<template v-slot:[`item.content`]=\"{ item }\">\n\t\t\t\t\t<textarea v-if=\"editable\" v-model=\"item.content\" class=\"form-control\" style=\"border-width:1px; resize:vertical;\"/>\n\t\t\t\t\t<textarea v-else v-model=\"item.content\" class=\"form-control p-0\" style=\"border-width:0px; resize:none;\" readonly/>\n\t\t\t\t</template>\n\t\t\t</v-data-table>\n\t\t</v-card>\n\t</v-container>\n</template>\n\n<script>\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as Utils from '../assets/function/utils.js';\n//import SelectCategory from './SelectCategory.vue';\n//import SelectSubcategory from './SelectSubcategory.vue';\n\nexport default {\n\tname: 'cmp-footer',\n\tcomponents: {\n\t\t//SelectCategory,\n\t\t//SelectSubcategory,\n\t},\n\tprops: {\n\t\theaders: [\n\t\t\t{\n\t\t\t\tkey: String,\n\t\t\t\ttitle: String,\n\t\t\t\talign: String,\n\t\t\t\tsortable: String,\n\t\t\t\twidth: String,\n\t\t\t}\n\t\t],\n\t\tendpoint: String,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tsearch: \"\",\n\t\t\ttoggle: \"viewMode\",\n\t\t\tselected: [], // 削除チェックを入れた行\n\t\t\teditingCategories: [],\n\t\t\teditingSubcategories: [],\n\t\t\teditingknowledges: [],\n\t\t\tknowledgesSaved: [], // DB保存済のナレッジ\n\t\t\taddedMst: [],\n\t\t\teditable: false,\n\t\t\tupdateFlg: false,\n\t\t};\n\t},\n\tmethods: {\n\t\t/* 【親から呼び出し】検索したカテゴリーリストを当コンポーネントに反映 */\n\t\tsetCategory(categories, subcategories) {\n\t\t\tthis.editingCategories = categories;\n\t\t\tthis.editingSubcategories = subcategories;\n\t\t},\n\t\t/* 【親から呼び出し】検索したナレッジリストを当コンポーネントに反映 */\n\t\tsetKnowledge(knowledges) {\n\t\t\tthis.editingknowledges = knowledges;\n\t\t\tthis.knowledgesSaved = knowledges;\n\t\t},\n\t\t/* listをlabel, value形式の配列に変換 */\n\t\tconvToOptions(list, addAble) {\n\t\t\tconst convToOptions = list.map((c) => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: c.name,\n\t\t\t\t\tvalue: c.id,\n\t\t\t\t};\n\t\t\t});\n\t\t\t// 先頭に「新規追加」を追加\n\t\t\tif(addAble) {\n\t\t\t\tconvToOptions.unshift({ label: \"新規追加\", value: \"new\"});\n\t\t\t}\n\t\t\t// 先頭に「未選択」を追加\n\t\t\tconvToOptions.unshift({ label: \"未選択\", value: \"\" });\n\t\t\treturn convToOptions;\n\t\t},\n\t\t/* 選択したカテゴリーから、サブカテゴリーを絞り込んで返却  */\n\t\tcreateSubCategories(categoryId) {\n\t\t\treturn Utils.createSubCategories(this.editingSubcategories, categoryId);\n\t\t},\n\t\t/* カテゴリーのIDに対応する名称を返す */\n\t\tgetCategoryName(categoryId) {\n\t\t\treturn Utils.getMasterName(this.editingCategories, categoryId);\n\t\t},\n\t\t/* サブカテゴリーのIDに対応する名称を返す */\n\t\tgetSubcategoryName(subcategoryId) {\n\t\t\treturn Utils.getMasterName(this.editingSubcategories, subcategoryId);\n\t\t},\n\t\t/* カテゴリーリスト更新 【戻り値】エラーなし：false、エラーあり：true */\n\t\tupdateMst() {\n\t\t\t// カテゴリーが新規追加されたか\n\t\t\tconst IsAddedNewCategory = (this.addedMst.categoryId == \"new\");\n\t\t\tconst IsAddedNewSubcategory = (this.addedMst.subcategoryId == \"new\");\n\t\t\t// 既存カテゴリーの名称が変更されたか\n\t\t\tconst IsChangedCategoryName = !IsAddedNewCategory && (this.getCategoryName(this.addedMst.categoryId) != this.addedMst.categoryName);\n\t\t\tconst IsChangedSubcategoryName = !IsAddedNewSubcategory && (this.getSubcategoryName(this.addedMst.subcategoryId) != this.addedMst.subcategoryName);\n\t\t\t\n\t\t\t/* エラーチェック */\n\t\t\t// カテゴリー・サブカテゴリーともに変更なしの場合エラー\n\t\t\tif((!IsAddedNewCategory && !IsChangedCategoryName) && (!IsAddedNewSubcategory && !IsChangedSubcategoryName)) {\n\t\t\t\talert(\"このカテゴリーは追加済です。\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// 未選択以外のカテゴリーを選択しているのに、名称が未入力の場合エラー\n\t\t\tif((this.addedMst.categoryId && !this.addedMst.categoryName)\n\t\t\t\t|| (this.addedMst.subcategoryId && !this.addedMst.subcategoryName)) {\n\t\t\t\talert(\"名称を入力してください。\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\t/* カテゴリーリストに反映 */\n\t\t\t// カテゴリーを追加した場合はリストに反映\n\t\t\tif(IsAddedNewCategory) {\n\t\t\t\tthis.addedMst.categoryId = uuidv4();\n\t\t\t\tthis.editingCategories.unshift(\n\t\t\t\t\t{ id: this.addedMst.categoryId, name: this.addedMst.categoryName },\n\t\t\t\t);\n\t\t\t}\n\t\t\t// サブカテゴリーを追加した場合はリストに反映\n\t\t\tif(IsAddedNewSubcategory) {\n\t\t\t\tthis.addedMst.subcategoryId = uuidv4();\n\t\t\t\tthis.editingSubcategories.unshift(\n\t\t\t\t\t{ id: this.addedMst.subcategoryId, name: this.addedMst.subcategoryName, categoryId: this.addedMst.categoryId }\t\n\t\t\t\t);\n\t\t\t}\n\t\t\t// 既存のカテゴリーの名称を変更した場合はリストに反映\n\t\t\tif(IsChangedCategoryName) {\n\t\t\t\tconst targetId = this.addedMst.categoryId;\n\t\t\t\tconst newName = this.addedMst.categoryName;\n\t\t\t\t$.each(this.editingCategories,\n\t\t\t\t\tfunction(index, val) {\n\t\t\t\t\t\tif(val.id == targetId) {\n\t\t\t\t\t\t\tval.name = newName;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\t// 既存のサブカテゴリーの名称を変更した場合はリストに反映\n\t\t\tif(IsChangedSubcategoryName) {\n\t\t\t\tconst targetId = this.addedMst.subcategoryId;\n\t\t\t\tconst newName = this.addedMst.subcategoryName;\n\t\t\t\t$.each(this.editingSubcategories,\n\t\t\t\t\tfunction(index, val) {\n\t\t\t\t\t\tif(val.id == targetId) {\n\t\t\t\t\t\t\tval.name = newName;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\t\n\t\t\talert(\"カテゴリーリストに反映しました。保存ボタンで保存してください。\");\n\t\t\tthis.addedMst = [];\n\t\t\treturn false;\n\t\t},\n\t\t/* カテゴリーの「削除」押下時処理 */\n\t\t/* 【引数】type：1(カテゴリー)または2(サブカテゴリー)、id：選択したID */\n\t\t/* 【戻り値】true(エラーあり)またはfalse(エラーなし) */\n\t\tdeleteCategoryItem(type, id) {\n\t\t\tconst typeName = type == 1 ? \"カテゴリー\" : \"サブカテゴリー\";\n\t\t\t\n\t\t\tif(confirm(\"この\" + typeName + \"を削除しますか？\")) {\n\t\t\t\t/* エラーチェック */\n\t\t\t\t// 配下のサブカテゴリーが存在しないこと\n\t\t\t\tif(type == 1) {\n\t\t\t\t\tif(this.createSubCategories(id).length > 0) {\n\t\t\t\t\t\talert(\"配下のサブカテゴリーが存在するため削除できません。\");\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 保存済のナレッジで使用していないこと\n\t\t\t\tconst fil1 = this.knowledgesSaved.filter(knowledge => {\n\t\t\t\t\treturn (type == 1 ? knowledge.categoryId : knowledge.subcategoryId) == id;\n\t\t\t\t});\n\t\t\t\t// 保存前のナレッジで使用していないこと\n\t\t\t\tconst fil2 = this.editingknowledges.filter(knowledge => {\n\t\t\t\t\treturn (type == 1 ? knowledge.categoryId : knowledge.subcategoryId) == id;\n\t\t\t\t});\n\t\t\t\tif(fil1.length > 0 || fil2.length > 0) {\n\t\t\t\t\talert(\"ナレッジに設定中のため削除できません。\");\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* 対象のカテゴリーをリストから削除 */\n\t\t\t\tif(type == 1) {\n\t\t\t\t\tthis.editingCategories = this.editingCategories.filter(editingCategory => {\n\t\t\t\t\t\treturn editingCategory.id != id;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.editingSubcategories = this.editingSubcategories.filter(editingSubcategory => {\n\t\t\t\t\t\treturn editingSubcategory.id != id;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 初期化\n\t\t\t\tif(type == 1) {\n\t\t\t\t\tthis.addedMst = [];\n\t\t\t\t} else {\n\t\t\t\t\tthis.addedMst.subcategoryId = \"\";\n\t\t\t\t\tthis.addedMst.subcategoryName = \"\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\talert(typeName + \"を削除しました。保存ボタンで保存してください。\");\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t/* 「行追加」押下時処理 */\n\t\taddRow() {\n\t\t\tthis.editingknowledges.unshift(\n\t\t\t\t{ id: uuidv4(), categoryId: \"\", subcategoryId: \"\", title: \"\", content: \"\" },\n\t\t\t);\n\t\t},\n\t\t/* ナレッジの配列から、選択した行を除外して返却 */\n\t\tremoveSelectedKnowledges() {\n\t\t\tthis.selected.forEach(checkedRow => {\n\t\t\t\tthis.editingknowledges = this.editingknowledges.filter(knowledge => {\n\t\t\t\t\treturn knowledge.id != checkedRow;\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.selected = [];\n\t\t\treturn this.editingknowledges;\n\t\t},\n\t\t/* 「行削除」押下時処理 */\n\t\tdeleteRow() {\n\t\t\tif(this.selected.length == 0) {\n\t\t\t\talert(\"削除したい行を選択してください。\");\n\t\t\t} else {\n\t\t\t\tif(confirm(\"選択した行を削除してよろしいですか？\")) {\n\t\t\t\t\tthis.editingknowledges = this.removeSelectedKnowledges();\n\t\t\t\t\talert(\"選択した行を削除しました。保存ボタンで保存してください。\");\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/* 「保存」押下時処理 */\n\t\tasync save() {\n\t\t\tthis.$emit(\"call-parent-save\", \n\t\t\t\tthis.editingCategories, \n\t\t\t\tthis.editingSubcategories, \n\t\t\t\tthis.editingknowledges,\n\t\t\t\t(this.selected.length > 0)\n\t\t\t);\n\t\t},\n\t},\n\twatch: {\n\t\t// 編集したらロード、検索ボタン押下前とかに「保存しますか？」ダイアログを出したい\n\t\t// 初期表示でカテゴリーはupdate検知してしまう（親から当コンポーネントの関数呼んで反映させてるため）検索したときは検知する\n\t\t// ナレッジは入力したり行追加しても検知されない\n\t\t/* editingCategories() {\n\t\t\tconsole.log(\"カテゴリー変更\");\n\t\t\tthis.updateFlg = true;\n\t\t},\n\t\teditingSubcategories() {\n\t\t\tconsole.log(\"サブカテゴリー変更\");\n\t\t\tthis.updateFlg = true;\n\t\t},\n\t\teditingknowledges() {\n\t\t\tconsole.log(\"ナレッジ変更\");\n\t\t\tthis.updateFlg = true;\n\t\t}, */\n\t},\n\tcreated() {\n\t\tconsole.log(\"knowledgetableのcreated\")\n\t},\n\tmounted () {\n\t\tconsole.log(\"mountedが呼ばれました\");\n\t},\n\tcomputed: {\n\t\t\n\t},\n}\n</script>\n\n<!-- <style scoped> -->\n<style>\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}